#!/usr/bin/env php
<?php

################
# Resolve autoloader.
################
$dir = __DIR__ . DIRECTORY_SEPARATOR . '..';

if (!file_exists($dir . DIRECTORY_SEPARATOR . 'autoload.php')) {
    $dir = __DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR . 'vendor';
}

if (!file_exists($dir . '/autoload.php')) {
    $dir = '.' . DIRECTORY_SEPARATOR . 'vendor';
}

if (!file_exists($dir . DIRECTORY_SEPARATOR . 'autoload.php')) {
    $dir = __DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR . '..';
}

if (!file_exists($dir . DIRECTORY_SEPARATOR . 'autoload.php')) {
    echo 'Autoload.php not found.';
    die();
}

require_once $dir . DIRECTORY_SEPARATOR . 'autoload.php';

##############################
# Code starts here.          #
##############################

###################
# Assumes this file resides in the project's root directory.
###################
$GLOBALS['QUARK'] = new Protoqol\Quark\Quark;

###################
# Create application.
###################
$app = new Symfony\Component\Console\Application("Quark 0.0.0-alpha - Protoqol");

##################
# Register commands.
##################
$app->addCommands([
    (new Protoqol\Quark\Commands\SetExecutableCommand()),
    (new Protoqol\Quark\Commands\GenerateMigrationCommand()),
    (new Protoqol\Quark\Commands\RunMigrationsCommand()),
    (new Protoqol\Quark\Commands\CreateDirectoryStructureCommand())
]);

################
# Take it away, Quark!
################
try {
    $app->run();
} catch (Exception $e) {

    ################
    # Or don't!
    ################
    echo 'Could not start Quark. Reason unknown.';
    die();
}

?>
